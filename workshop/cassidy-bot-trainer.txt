settings
{
	modes
	{
		Skirmish
		{
			enabled maps
			{
				Workshop Chamber
			}
		}

		General
		{
			Limit Roles: 2 Of Each Role Per Team
		}
	}
}

variables
{
	global:
		0: bot_turn_rate
		1: bot_targeting_timeout
		2: bot_passive_mode_enabled
}

rule("Workshop settings")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.bot_passive_mode_enabled = Workshop Setting Toggle(Custom String("General"), Custom String(
			"Passive bots (only attack when injured)"), True, 30);
	}
}

rule("Global initialize")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.bot_turn_rate = Workshop Setting Integer(Custom String("General"), Custom String("Bot turn rate"), 400, 200, 1000, 10);
		Global.bot_targeting_timeout = Workshop Setting Real(Custom String("General"), Custom String("Bot targeting timeout [seconds]"), 1,
			0.500, 1, 20);
	}
}

rule("Add bot")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create Dummy Bot(Hero(Cassidy), Team 2, -1, Vector(0, 0, 0), Vector(0, 0, 0));
	}
}

rule("When bot takes damage, start facing attacker and shoot")
{
	event
	{
		Player Took Damage;
		All;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == True;
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Eye Position(Attacker)), Global.bot_turn_rate, To World,
			Direction and Turn Rate);
		Wait Until(Ray Cast Hit Player(Eye Position(Event Player), Eye Position(Event Player) + Facing Direction Of(Event Player) * 100,
			Attacker, Event Player, True) != Null, Global.bot_targeting_timeout);
		Press Button(Event Player, Button(Primary Fire));
	}
}

rule("When bot is not passive or is injured, attack with primary fire")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == True;
		(!Global.bot_passive_mode_enabled || Normalized Health(Event Player) <= 0.950) == True;
		Ray Cast Hit Player(Eye Position(Event Player), Eye Position(Event Player) + Facing Direction Of(Event Player) * 100,
			All Living Players(Opposite Team Of(Team Of(Event Player))), Event Player, True) != Null;
		Is Game In Progress == True;
	}

	actions
	{
		Press Button(Event Player, Button(Primary Fire));
		Wait(0.500, Ignore Condition);
		Loop If Condition Is True;
	}
}
